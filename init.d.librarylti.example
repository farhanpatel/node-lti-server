#!/bin/sh
#
# library-reserves-lti-server        Startup script for the library reserves LTI server
#
# chkconfig: - 90 10
#
# processname: library-reserves-lti-server
# pidfile: /var/nodeapps/library-reserves-lti-server/shared/pids/library-reserves-lti-server.pid

. /etc/rc.d/init.d/functions

PATH=/usr/local/bin:/sbin:/usr/bin:/bin

NODE='/usr/local/bin/node'
PORT=3001
APP_DIR='/var/nodeapps/library-reserves-lti-server/current'
SHARED_DIR='/var/nodeapps/library-reserves-lti-server/shared'
SCRIPT="$APP_DIR/app.js"
PIDFILE="$SHARED_DIR/pids/library-reserves-lti-server.pid"
LOGFILE="$SHARED_DIR/log/library-reserves-lti-server.log"
RUN_AS_USER=nodeuser

start() {
    if [ -f $PIDFILE ] ; then
        PID=$(cat $PIDFILE)
        echo "$PIDFILE exists, library-reserves-lti-server is already running or crashed ($PID)"
    else
        echo -n "Starting library-reserves-lti-server..."
        NODE_ENV=production $NODE $SCRIPT >> $LOGFILE 2>&1 &
        echo_success || echo_failure
        echo $! > $PIDFILE
        chown $RUN_AS_USER $PIDFILE
    fi
    echo
}

stop() {
        echo -n "Stopping library-reserves-lti-server..."
    if [ ! -f $PIDFILE ] ; then
        echo -n " process is not running"
                echo_failure
    else
        PID=$(cat $PIDFILE)
        echo -n " killing $PID "
        kill $PID
        while [ -x ${PIDFILE} ] ; do
            sleep 1
        done
        rm -rf $PIDFILE
        echo_success || echo_failure
    fi
    echo
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        stop
        start
esac